package com.aalm.gl.model;


import com.aalm.gl.model.common.AalmGl;

import java.sql.CallableStatement;

import java.sql.SQLException;


import java.sql.Date;

import java.sql.ResultSet;
import java.sql.Types;

import oracle.jbo.JboException;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.DBTransactionImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Dec 02 13:47:55 EET 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AalmGlImpl extends ApplicationModuleImpl implements AalmGl {
    /**
     * This is the default constructor (do not remove).
     */
    public AalmGlImpl() {
    }
    /** custom methods used by me
     */
    public void update_original_gl_doc(Integer vOriginGlDocId,
                           Integer vOriginOrgCode) {
        DBTransactionImpl dbti1 = (DBTransactionImpl) getDBTransaction();
        CallableStatement stmnt =
        (CallableStatement)dbti1.createCallableStatement(("call update_original_gl_doc(?,?);"), 0);
        try {
        //            System.out.println("1- "+vFileId +"  2- "+ vGrantTo + "  3- "+vPtnt);
            stmnt.setInt(1, vOriginGlDocId);
            stmnt.setInt(2, vOriginOrgCode);
            stmnt.execute();
            executeCommand("Commit");
    //            System.out.println("execute is done");
        }catch (SQLException sqlerr) {
            throw new JboException(sqlerr);
        } finally {
            try {
                if (stmnt != null) {
                    stmnt.close();
                }
            } catch (SQLException closeerr) {
                throw new JboException(closeerr);
            }
        } 
    }
    
    public Integer reverse_document(Integer vOrgCode, 
                           Integer vGlDocId) {
        DBTransactionImpl dbti1 = (DBTransactionImpl) getDBTransaction();
        CallableStatement stmnt =
        (CallableStatement)dbti1.createCallableStatement(("call reverse_document(?,?,?);"), 0);
        try {
        //            System.out.println("1- "+vFileId +"  2- "+ vGrantTo + "  3- "+vPtnt);
            
            stmnt.setInt(1, vGlDocId);
            stmnt.setInt(2, vOrgCode);
            stmnt.registerOutParameter(3, Types.INTEGER);
            boolean rs2 = stmnt.execute();
            
            executeCommand("Commit");
//            System.out.println("execute is done"+ stmnt.getInt(3));
            return stmnt.getInt(3);
        }catch (SQLException sqlerr) {
            throw new JboException(sqlerr);
        } finally {
            try {
                if (stmnt != null) {
                    stmnt.close();
                }
            } catch (SQLException closeerr) {
                throw new JboException(closeerr);
            }
        } 
    }

    /** custom methods used by me
     */
    public void gl_posting(Integer vOrgCode, 
                           Integer vAccCode, 
                           String vCurrCode,
                           Date vTrDate,
                           float vTrDebit,
                           float vTrCredit) {
        DBTransactionImpl dbti1 = (DBTransactionImpl) getDBTransaction();
        CallableStatement stmnt =
        (CallableStatement)dbti1.createCallableStatement(("call gl_posting(?,?,?,?,?,?);"), 0);
        try {
        //            System.out.println("1- "+vFileId +"  2- "+ vGrantTo + "  3- "+vPtnt);
            stmnt.setInt(1, vOrgCode);
            stmnt.setInt(2, vAccCode);
            stmnt.setString(3, vCurrCode);
            stmnt.setDate(4, vTrDate);
            stmnt.setFloat(5, vTrDebit);
            stmnt.setFloat(6, vTrCredit);
            stmnt.execute();
            executeCommand("Commit");
//            System.out.println("execute is done");
        }catch (SQLException sqlerr) {
            throw new JboException(sqlerr);
        } finally {
            try {
                if (stmnt != null) {
                    stmnt.close();
                }
            } catch (SQLException closeerr) {
                throw new JboException(closeerr);
            }
        } 
    }
    
    
    ////// 
    public void create_gl_assistance_from_tables(Integer vAccCode, String vTblName, Integer vOrgCode) {
        DBTransactionImpl dbti1 = (DBTransactionImpl) getDBTransaction();
        CallableStatement statement1 =
        (CallableStatement)dbti1.createCallableStatement(("call create_gl_assistance_from_tables(?,?,?);"), 0);
        try {
        //            System.out.println("1- "+vFileId +"  2- "+ vGrantTo + "  3- "+vPtnt);
            statement1.setInt(1, vAccCode);
            statement1.setString(2, vTblName);
            statement1.setInt(3, vOrgCode);
            statement1.execute();
            executeCommand("Commit");
        }catch (SQLException sqlerr) {
            throw new JboException(sqlerr);
        } finally {
            try {
                if (statement1 != null) {
                    statement1.close();
                }
            } catch (SQLException closeerr) {
                throw new JboException(closeerr);
            }
        } 
    }
  
  
    /**
     * Container's getter for GlAccTypesV.
     * @return GlAccTypesV
     */
    public ViewObjectImpl getGlAccTypesV() {
        return (ViewObjectImpl) findViewObject("GlAccTypesV");
    }

    /**
     * Container's getter for GlTransTypesV.
     * @return GlTransTypesV
     */
    public ViewObjectImpl getGlTransTypesV() {
        return (ViewObjectImpl) findViewObject("GlTransTypesV");
    }

    /**
     * Container's getter for GlTransTypesCRUDV.
     * @return GlTransTypesCRUDV
     */
    public ViewObjectImpl getGlTransTypesCRUDV() {
        return (ViewObjectImpl) findViewObject("GlTransTypesCRUDV");
    }

    /**
     * Container's getter for GlGenAccChartV.
     * @return GlGenAccChartV
     */
    public ViewObjectImpl getGlGenAccChartV() {
        return (ViewObjectImpl) findViewObject("GlGenAccChartV");
    }

    /**
     * Container's getter for GlGenAccChartTreeV.
     * @return GlGenAccChartTreeV
     */
    public ViewObjectImpl getGlGenAccChartTreeV() {
        return (ViewObjectImpl) findViewObject("GlGenAccChartTreeV");
    }

    /**
     * Container's getter for GlGenAccChartCRUDV.
     * @return GlGenAccChartCRUDV
     */
    public ViewObjectImpl getGlGenAccChartCRUDV() {
        return (ViewObjectImpl) findViewObject("GlGenAccChartCRUDV");
    }

    /**
     * Container's getter for GlCostCentersV.
     * @return GlCostCentersV
     */
    public ViewObjectImpl getGlCostCentersV() {
        return (ViewObjectImpl) findViewObject("GlCostCentersV");
    }

    /**
     * Container's getter for GlCostCentersTreeV.
     * @return GlCostCentersTreeV
     */
    public ViewObjectImpl getGlCostCentersTreeV() {
        return (ViewObjectImpl) findViewObject("GlCostCentersTreeV");
    }

    /**
     * Container's getter for GlCostCentersCRUDV.
     * @return GlCostCentersCRUDV
     */
    public ViewObjectImpl getGlCostCentersCRUDV() {
        return (ViewObjectImpl) findViewObject("GlCostCentersCRUDV");
    }

    /**
     * Container's getter for GlFinancialYearsV.
     * @return GlFinancialYearsV
     */
    public ViewObjectImpl getGlFinancialYearsV() {
        return (ViewObjectImpl) findViewObject("GlFinancialYearsV");
    }

    /**
     * Container's getter for GlOrgAccChartCRUDV.
     * @return GlOrgAccChartCRUDV
     */
    public ViewObjectImpl getGlOrgAccChartCRUDV() {
        return (ViewObjectImpl) findViewObject("GlOrgAccChartCRUDV");
    }

    /**
     * Container's getter for GlOrgAccChartV.
     * @return GlOrgAccChartV
     */
    public ViewObjectImpl getGlOrgAccChartV() {
        return (ViewObjectImpl) findViewObject("GlOrgAccChartV");
    }

    /**
     * Container's getter for GlOrgAccChartTreeV.
     * @return GlOrgAccChartTreeV
     */
    public ViewObjectImpl getGlOrgAccChartTreeV() {
        return (ViewObjectImpl) findViewObject("GlOrgAccChartTreeV");
    }

    /**
     * Container's getter for fk_GL_GEN_ACC_CHART_GL_GEN_ACC_CHART1CL1.
     * @return fk_GL_GEN_ACC_CHART_GL_GEN_ACC_CHART1CL1
     */
    public ViewLinkImpl getfk_GL_GEN_ACC_CHART_GL_GEN_ACC_CHART1CL1() {
        return (ViewLinkImpl) findViewLink("fk_GL_GEN_ACC_CHART_GL_GEN_ACC_CHART1CL1");
    }

    /**
     * Container's getter for FkGlCostCentersGlCostCenters1VL1.
     * @return FkGlCostCentersGlCostCenters1VL1
     */
    public ViewLinkImpl getFkGlCostCentersGlCostCenters1VL1() {
        return (ViewLinkImpl) findViewLink("FkGlCostCentersGlCostCenters1VL1");
    }

    /**
     * Container's getter for FkGlOrgAccChartGlOrgAccChart1VL1.
     * @return FkGlOrgAccChartGlOrgAccChart1VL1
     */
    public ViewLinkImpl getFkGlOrgAccChartGlOrgAccChart1VL1() {
        return (ViewLinkImpl) findViewLink("FkGlOrgAccChartGlOrgAccChart1VL1");
    }


    /**
     * Container's getter for GlAccAssistancesV1.
     * @return GlAccAssistancesV1
     */
    public ViewObjectImpl getGlAccAssistancesV() {
        return (ViewObjectImpl) findViewObject("GlAccAssistancesV");
    }


    /**
     * Container's getter for GlDocumentsV1.
     * @return GlDocumentsV1
     */
    public ViewObjectImpl getGlDocumentsV() {
        return (ViewObjectImpl) findViewObject("GlDocumentsV");
    }


    /**
     * Container's getter for GlJournalsV1.
     * @return GlJournalsV1
     */
    public ViewObjectImpl getGlJournalsV() {
        return (ViewObjectImpl) findViewObject("GlJournalsV");
    }

    /**
     * Container's getter for FkGlJournalsGlDocuments1VL1.
     * @return FkGlJournalsGlDocuments1VL1
     */
    public ViewLinkImpl getFkGlJournalsGlDocuments1VL1() {
        return (ViewLinkImpl) findViewLink("FkGlJournalsGlDocuments1VL1");
    }

    /**
     * Container's getter for GlDocumentsV1.
     * @return GlDocumentsV1
     */
    public ViewObjectImpl getReadOnlyGlDocumentsV() {
        return (ViewObjectImpl) findViewObject("ReadOnlyGlDocumentsV");
    }


    /**
     * Container's getter for GlJournalsV2.
     * @return GlJournalsV2
     */
    public ViewObjectImpl getReadOnlyGlJournalsV() {
        return (ViewObjectImpl) findViewObject("ReadOnlyGlJournalsV");
    }

    /**
     * Container's getter for FkGlJournalsGlDocuments1VL3.
     * @return FkGlJournalsGlDocuments1VL3
     */
    public ViewLinkImpl getFkGlJournalsGlDocuments1VL3() {
        return (ViewLinkImpl) findViewLink("FkGlJournalsGlDocuments1VL3");
    }


    /**
     * Container's getter for GlOrgAccBalanceV1.
     * @return GlOrgAccBalanceV1
     */
    public ViewObjectImpl getGlOrgAccBalanceV() {
        return (ViewObjectImpl) findViewObject("GlOrgAccBalanceV");
    }
}

